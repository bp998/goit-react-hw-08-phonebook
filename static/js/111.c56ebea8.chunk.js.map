{"version":3,"file":"static/js/111.c56ebea8.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/pages/contacts/Contacts.module.css?40b9","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactListElement.module.css?2ee3","components/ContactList/ContactListElement.jsx","components/ContactList/ContactList.jsx","pages/contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\nexport const selectSortedFilteredContacts = state => {\n  const filteredContacts = selectFilteredContacts(state);\n  return filteredContacts.sort((a, b) => a.name.localeCompare(b.name));\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__XJlls\",\"contactsHeading\":\"Contacts_contactsHeading__A6rBO\",\"phonebookHeading\":\"Contacts_phonebookHeading__z0Vk6\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactForm_contact__uCAfv\",\"text\":\"ContactForm_text__kqq6l\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\",\"alert\":\"ContactForm_alert__NaGGq\"};","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const [isOnList, setIsOnList] = useState(null);\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    if (contacts.items.find(el => el.name === name)) {\n      setIsOnList(true);\n    } else {\n      setIsOnList(false);\n      dispatch(addContact({ name, number }));\n    }\n    form.reset();\n  };\n\n  return (\n    <form className={css.contact} onSubmit={handleSubmit}>\n      <label>\n        <p className={css.text}>Name</p>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <p className={css.text}>Number</p>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n        {isOnList ? (\n          <span className={css.alert}>Contact is already on your list</span>\n        ) : null}\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Filter_search__G+v4u\",\"input\":\"Filter_input__N7T3z\"};","import { setFilter } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nimport { useDispatch } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const filter = e.target.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <label>\n      <p className={css.search}>Find contacts by name:</p>\n      <input\n        className={css.input}\n        onChange={handleFilterChange}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactListElement_list__lxFHn\",\"listElem\":\"ContactListElement_listElem__FO1Pm\",\"listElemName\":\"ContactListElement_listElemName__hMFJv\",\"listElemTel\":\"ContactListElement_listElemTel__jcs1z\",\"delete\":\"ContactListElement_delete__G4ytj\"};","import css from './ContactListElement.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectSortedFilteredContacts } from 'redux/contacts/selectors';\n\nconst ContactListElement = () => {\n  const sortedFilteredContacts = useSelector(selectSortedFilteredContacts);\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(deleteContact(id));\n  return (\n    <ul className={css.list}>\n      {sortedFilteredContacts.map(({ id, name, number }) => (\n        <li className={css.listElem} key={id}>\n          <p className={css.listElemName}>{name}:</p>\n          <a className={css.listElemTel} href={'tel:' + { number }}>\n            {number}\n          </a>\n          <button\n            className={css.delete}\n            onClick={() => handleDelete(id)}\n            id={id}\n            type=\"button\"\n          >\n            ‚ùå\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactListElement;\n","import { selectContacts } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport ContactListElement from './ContactListElement';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  return (\n    <div>\n      {contacts.length > 0 ? (\n        <ul>\n          <ContactListElement />\n        </ul>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { selectError, selectIsLoading } from '../../redux/contacts/selectors';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport css from './Contacts.module.css';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.contacts}>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n      </HelmetProvider>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2 className={css.contactsHeading}>Contacts</h2>\n      <Filter />\n      {isLoading && !error ? <p>Loading contacts...</p> : <ContactList />}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectError","error","selectIsLoading","isLoading","selectSortedFilteredContacts","filteredContacts","filter","selectFilter","contact","name","toLowerCase","includes","selectFilteredContacts","sort","a","b","localeCompare","useState","isOnList","setIsOnList","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","form","target","elements","value","number","find","el","addContact","reset","type","title","required","onChange","setFilter","sortedFilteredContacts","map","id","href","onClick","deleteContact","handleDelete","length","useEffect","fetchContacts"],"sourceRoot":""}